---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: konnectivity-agent
  labels:
    app: konnectivity-agent
    clusterID: "{{ .ClusterID }}"
spec:
  progressDeadlineSeconds: 600
  replicas: {{ .Replicas }}
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: konnectivity-agent
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: konnectivity-agent
        clusterID: "{{ .ClusterID }}"
{{ if .RestartDate }}
      annotations:
        openshift.io/restartedAt: "{{ .RestartDate }}"
{{ end }}
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            preference:
              matchExpressions:
              - key: dedicated
                operator: In
                values:
                - master-{{ .ClusterID }}
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: clusterID
                      operator: In
                      values: ["{{ .ClusterID }}"]
                topologyKey: "kubernetes.io/hostname"
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values: ["konnectivity-agent"]
              topologyKey: "kubernetes.io/hostname"
            - labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values: ["konnectivity-agent"]
              topologyKey: "topology.kubernetes.io/zone"
      automountServiceAccountToken: false
{{- if .MasterPriorityClass }}
      priorityClassName: {{ .MasterPriorityClass }}
{{- end }}
      containers:
      - name: konnectivity-agent
{{- if .KonnectivitySecurityContext }}
{{- $securityContext := .KonnectivitySecurityContext }}
        securityContext:
          runAsUser: {{ $securityContext.RunAsUser }}
{{- end }}
        image: {{ imageFor "apiserver-network-proxy" }}
        imagePullPolicy: IfNotPresent
        command: ["/bin/proxy-agent"]
        args: [
          "--logtostderr=true",
          "--ca-cert=/etc/konnectivity/ca/ca.crt",
          "--agent-cert=/etc/konnectivity/agent/tls.crt",
          "--agent-key=/etc/konnectivity/agent/tls.key",
          "--proxy-server-host=konnectivity-server.{{ .Namespace }}.svc",
          "--proxy-server-port={{ .KonnectivityAgentClusterPort }}",
          "--health-server-port={{ .KonnectivityAgentHealthPort }}",
          "--agent-identifiers=ipv4={{ .OpenShiftAPIClusterIP }}&ipv4={{ .OauthAPIClusterIP }}",
          "--keepalive-time=30s",
          "--probe-interval=5s",
          "--sync-interval=5s",
          "--sync-interval-cap=30s",
          "--v=3",
          ]
{{- if .KonnectivityAgentControlPlaneContainerResources }}
        resources: {{ range .KonnectivityAgentControlPlaneContainerResources }}{{ range .ResourceRequest }}
          requests: {{ if .CPU }}
            cpu: {{ .CPU }}{{ end }}{{ if .Memory }}
            memory: {{ .Memory }}{{ end }}{{ end }}{{ range .ResourceLimit }}
          limits: {{ if .CPU }}
            cpu: {{ .CPU }}{{ end }}{{ if .Memory }}
            memory: {{ .Memory }}{{ end }}{{ end }}{{ end }}
{{- end }}
        livenessProbe:
          httpGet:
            path: /healthz
            port: {{ .KonnectivityAgentHealthPort }}
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 6
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /readyz
            port: {{ .KonnectivityAgentHealthPort }}
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 1
          timeoutSeconds: 5
        startupProbe:
          httpGet:
            path: /healthz
            port: {{ .KonnectivityAgentHealthPort }}
            scheme: HTTP
          periodSeconds: 5
          successThreshold: 1
          failureThreshold: 60
          timeoutSeconds: 5
        volumeMounts:
        - mountPath: /etc/konnectivity/ca
          name: konnectivity-ca
        - mountPath: /etc/konnectivity/agent
          name: agent-certs
      tolerations:
      - key: "multi-az-worker"
        operator: "Equal"
        value: "true"
        effect: NoSchedule
      - key: "dedicated"
        operator: "Equal"
        value: "master-{{ .ClusterID }}"
        effect: NoSchedule
      volumes:
      - name: agent-certs
        secret:
          defaultMode: 0640
          secretName: konnectivity-agent
      - name: konnectivity-ca
        configMap:
          defaultMode: 0640
          name: konnectivity-ca-bundle

