apiVersion: apps/v1
kind: Deployment
metadata:
  name: cluster-version-operator
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: cluster-version-operator
  template:
    metadata:
      name: cluster-version-operator
      labels:
        k8s-app: cluster-version-operator
        clusterID: "{{ .ClusterID }}"
{{ if .RestartDate }}
      annotations:
        openshift.io/restartedAt: "{{ .RestartDate }}"
{{ end }}
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            preference:
              matchExpressions:
              - key: dedicated
                operator: In
                values:
                - master-{{ .ClusterID }}
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: clusterID
                      operator: In
                      values: ["{{ .ClusterID }}"]
                topologyKey: "kubernetes.io/hostname"
      tolerations:
        - key: "dedicated"
          operator: "Equal"
          value: "master-{{ .ClusterID }}"
          effect: NoSchedule
        - key: "multi-az-worker"
          operator: "Equal"
          value: "true"
          effect: NoSchedule
      automountServiceAccountToken: false
{{ if .MasterPriorityClass }}
      priorityClassName: {{ .MasterPriorityClass }}
{{ end }}
      containers:
        - name: cluster-version-operator
          image: {{ .ReleaseImage }}
          imagePullPolicy: IfNotPresent
{{- if .ClusterVersionOperatorSecurityContext }}
{{- $securityContext := .ClusterVersionOperatorSecurityContext }}
          securityContext:
            runAsUser: {{ $securityContext.RunAsUser }}
{{- end }}
          command:
            - "cluster-version-operator"
          args:
            - "start"
            - "--release-image={{ .ReleaseImage }}"
            - "--enable-auto-update=false"
            - "--enable-default-cluster-version=true"
            - "--kubeconfig=/etc/openshift/kubeconfig/kubeconfig"
            - "--listen=127.0.0.1:9099"
            - "--serving-cert-file=/etc/tls/serving-cert/server.crt"
            - "--serving-key-file=/etc/tls/serving-cert/server.key"
            - "--v=4"
          terminationMessagePolicy: FallbackToLogsOnError
{{ if .ClusterVersionOperatorResources }}
          resources:{{ range .ClusterVersionOperatorResources }}{{ range .ResourceRequest }}
            requests: {{ if .CPU }}
              cpu: {{ .CPU }}{{ end }}{{ if .Memory }}
              memory: {{ .Memory }}{{ end }}{{ end }}{{ range .ResourceLimit }}
            limits: {{ if .CPU }}
              cpu: {{ .CPU }}{{ end }}{{ if .Memory }}
              memory: {{ .Memory }}{{ end }}{{ end }}{{ end }}
{{ end }}
          volumeMounts:
            - mountPath: /etc/cvo/updatepayloads
              name: etc-cvo-updatepayloads
              readOnly: true
            - mountPath: /etc/openshift/kubeconfig
              name: kubeconfig
              readOnly: true
            - mountPath: /etc/tls/serving-cert
              name: serving-cert
              readOnly: true
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: CLUSTER_PROFILE
              value: ibm-cloud-managed
{{ if .ROKSMetricsImage }}
        - name: metrics-pusher
          image: {{ .ROKSMetricsImage }}
{{- if .ROKSMetricsSecurityContextMaster }}
{{- $securityContext := .ROKSMetricsSecurityContextMaster }}
          securityContext:
            runAsUser: {{ $securityContext.RunAsUser }}
{{- end }}
          imagePullPolicy: IfNotPresent
          command:
            - "metrics-pusher"
          args:
            - "--destination-path=/api/v1/namespaces/openshift-roks-metrics/services/push-gateway:http/proxy/metrics/job/cluster-version-operator"
            - "--kubeconfig=/etc/openshift/kubeconfig/kubeconfig"
            - "--frequency=30s"
            - "--source-url=https://localhost:9099/metrics"
            - "--client-ca-file=/etc/kubernetes/config/initial-ca.crt"
          terminationMessagePolicy: FallbackToLogsOnError
          resources:
            requests:
              cpu: 1m
              memory: 15Mi
          volumeMounts:
            - mountPath: /etc/openshift/kubeconfig
              name: kubeconfig
              readOnly: true
            - mountPath: /etc/kubernetes/config
              name: config
              readOnly: true
{{ end }}
      volumes:
        - name: work
          emptyDir: {}
        - name: etc-cvo-updatepayloads
          emptyDir: {}
        - name: kubeconfig
          secret:
            secretName: service-network-admin-kubeconfig
            defaultMode: 0640
        - name: serving-cert
          secret:
            secretName: cluster-version-operator
            defaultMode: 0640
        - name: config
          configMap:
            name: cluster-version-operator
