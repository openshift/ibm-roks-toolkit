kind: Deployment
apiVersion: apps/v1
metadata:
  name: openshift-oauth-apiserver
spec:
  replicas: {{ .Replicas }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 3
      maxUnavailable: 1
  selector:
    matchLabels:
      app: openshift-oauth-apiserver
  progressDeadlineSeconds: 600
  template:
    metadata:
      name: openshift-oauth-apiserver
      labels:
        app: openshift-oauth-apiserver
        clusterID: "{{ .ClusterID }}"
{{ if .RestartDate }}
      annotations:
        openshift.io/restartedAt: "{{ .RestartDate }}"
{{ end }}
    spec:
      tolerations:
        - key: "dedicated"
          operator: "Equal"
          value: "master-{{ .ClusterID }}"
          effect: NoSchedule
        - key: "multi-az-worker"
          operator: "Equal"
          value: "true"
          effect: NoSchedule
      affinity:
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: clusterID
                      operator: In
                      values: ["{{ .ClusterID }}"]
                topologyKey: "kubernetes.io/hostname"
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values: ["openshift-oauth-apiserver"]
              topologyKey: "kubernetes.io/hostname"
            - labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values: ["openshift-oauth-apiserver"]
              topologyKey: "topology.kubernetes.io/zone"
      automountServiceAccountToken: false
{{ if .MasterPriorityClass }}
      priorityClassName: {{ .MasterPriorityClass }}
{{ end }}
      containers:
      - name: oauth-apiserver
{{- if .OauthAPIServerSecurityContext }}
{{- $securityContext := .OauthAPIServerSecurityContext }}
        securityContext:
          runAsUser: {{ $securityContext.RunAsUser }}
{{- end }}
{{ if .OauthAPIServerResources }}
        resources:{{ range .OauthAPIServerResources }}{{ range .ResourceRequest }}
          requests: {{ if .CPU }}
            cpu: {{ .CPU }}{{ end }}{{ if .Memory }}
            memory: {{ .Memory }}{{ end }}{{ end }}{{ range .ResourceLimit }}
          limits: {{ if .CPU }}
            cpu: {{ .CPU }}{{ end }}{{ if .Memory }}
            memory: {{ .Memory }}{{ end }}{{ end }}{{ end }}
{{ end }}
        readinessProbe:
          httpGet:
            path: readyz
            port: 8443
            scheme: HTTPS
          timeoutSeconds: 1
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 10
        livenessProbe:
          httpGet:
            path: healthz
            port: 8443
            scheme: HTTPS
          initialDelaySeconds: 30
          timeoutSeconds: 1
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 3
        command:
        - /usr/bin/oauth-apiserver
        ports:
        - containerPort: 8443
          protocol: TCP
        imagePullPolicy: IfNotPresent
        volumeMounts:
        - name: audit-policy
          mountPath: /var/run/audit
        - name: secret
          mountPath: /var/run/secret
        - name: config
          mountPath: /var/run/config
        - name: audit-dir
          mountPath: /var/log/oauth-apiserver
        terminationMessagePolicy: FallbackToLogsOnError
        image: {{ imageFor "oauth-apiserver" }}
        args:
        - start
        - --authentication-kubeconfig=/var/run/secret/kubeconfig
        - --authorization-kubeconfig=/var/run/secret/kubeconfig
        - --kubeconfig=/var/run/secret/kubeconfig
        - --secure-port=8443
        - --audit-log-path=/var/log/oauth-apiserver/audit.log
        - --audit-log-format=json
        - --audit-log-maxsize=100
        - --audit-log-maxbackup=10
        - --etcd-cafile=/var/run/config/etcd-ca.crt
        - --etcd-keyfile=/var/run/secret/etcd-client.key
        - --etcd-certfile=/var/run/secret/etcd-client.crt
        - --shutdown-delay-duration=3s
        - --tls-private-key-file=/var/run/secret/server.key
        - --tls-cert-file=/var/run/secret/server.crt
        - --audit-policy-file=/var/run/audit/policy.yaml
        - --cors-allowed-origins='//127\.0\.0\.1(:|$)'
        - --cors-allowed-origins='//localhost(:|$)'
        - --etcd-servers=https://{{ .EtcdClientName }}:2379
        - --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256
        - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256
        - --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
        - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
        - --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256
        - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
        - --tls-cipher-suites=TLS_AES_128_GCM_SHA256
        - --tls-cipher-suites=TLS_CHACHA20_POLY1305_SHA256
        - --tls-cipher-suites=TLS_AES_256_GCM_SHA384
        - --tls-min-version=VersionTLS12
        - --v=2
      volumes:
      - name: audit-policy
        configMap:
          name: openshift-oauth-apiserver-auditpolicy
          defaultMode: 0640
      - name: secret
        secret:
          secretName: openshift-oauth-apiserver
          defaultMode: 0640
      - name: config
        configMap:
          name: openshift-oauth-apiserver
          defaultMode: 0640
      - name: audit-dir
        emptyDir: {}
